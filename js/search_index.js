var search_data = {"index":{"searchIndex":["activerecord","base","connectionpool","rails","rails2preload","rails2preloadtest","rails2preload","configuration","initializer","spin","_hooks()","add_spin_hooks()","boot!()","boot_rails()","connection_pool()","disconnect!()","disconnected?()","execute_hook()","hook()","initialize_rails()","new()","postload()","preload()","preload_until()","prepare_rails()","setup()","teardown()","test_add_spin_hooks()","test_after_fork()","test_after_preload_classes_are_preloaded()","test_after_preload_classes_not_preloaded()","test_before_preload()","test_initialize_rails()","gemfile","rakefile"],"longSearchIndex":["activerecord","activerecord::base","activerecord::connectionpool","rails","rails2preload","rails2preloadtest","rails2preloadtest::rails2preload","rails::configuration","rails::initializer","spin","spin::_hooks()","rails2preload::add_spin_hooks()","rails::boot!()","rails2preloadtest::rails2preload::boot_rails()","activerecord::base::connection_pool()","activerecord::connectionpool#disconnect!()","activerecord::connectionpool#disconnected?()","spin::execute_hook()","spin::hook()","rails2preloadtest::rails2preload::initialize_rails()","rails::initializer::new()","rails2preload::postload()","rails2preload::preload()","rails2preload::preload_until()","rails2preload::prepare_rails()","rails2preloadtest#setup()","rails2preloadtest#teardown()","rails2preloadtest#test_add_spin_hooks()","rails2preloadtest#test_after_fork()","rails2preloadtest#test_after_preload_classes_are_preloaded()","rails2preloadtest#test_after_preload_classes_not_preloaded()","rails2preloadtest#test_before_preload()","rails2preloadtest#test_initialize_rails()","",""],"info":[["ActiveRecord","","ActiveRecord.html","",""],["ActiveRecord::Base","","ActiveRecord/Base.html","",""],["ActiveRecord::ConnectionPool","","ActiveRecord/ConnectionPool.html","",""],["Rails","","Rails.html","",""],["Rails2Preload","","Rails2Preload.html","","<p>The purpose of Rails2Preload is to optimize testing with Spin and Rails 2.\nIt does this by splitting …\n"],["Rails2PreloadTest","","Rails2PreloadTest.html","",""],["Rails2PreloadTest::Rails2Preload","","Rails2PreloadTest/Rails2Preload.html","",""],["Rails::Configuration","","Rails/Configuration.html","",""],["Rails::Initializer","","Rails/Initializer.html","",""],["Spin","","Spin.html","",""],["_hooks","Spin","Spin.html#method-c-_hooks","(name)",""],["add_spin_hooks","Rails2Preload","Rails2Preload.html#method-c-add_spin_hooks","()","<p>Called from .spin.rb to add all hooks necessary to integrate Rails2Preload.\n"],["boot!","Rails","Rails.html#method-c-boot-21","()",""],["boot_rails","Rails2PreloadTest::Rails2Preload","Rails2PreloadTest/Rails2Preload.html#method-c-boot_rails","()","<p>Patch a couple Rails2Preload methods that use Kernel.require.\n"],["connection_pool","ActiveRecord::Base","ActiveRecord/Base.html#method-c-connection_pool","()",""],["disconnect!","ActiveRecord::ConnectionPool","ActiveRecord/ConnectionPool.html#method-i-disconnect-21","()",""],["disconnected?","ActiveRecord::ConnectionPool","ActiveRecord/ConnectionPool.html#method-i-disconnected-3F","()","<p>Returns <code>true</code> if the #disconnect! method has been called.\n"],["execute_hook","Spin","Spin.html#method-c-execute_hook","(name)",""],["hook","Spin","Spin.html#method-c-hook","(name, &block)",""],["initialize_rails","Rails2PreloadTest::Rails2Preload","Rails2PreloadTest/Rails2Preload.html#method-c-initialize_rails","()",""],["new","Rails::Initializer","Rails/Initializer.html#method-c-new","(configuration)",""],["postload","Rails2Preload","Rails2Preload.html#method-c-postload","(initializer)","<p>Called by the Rails patch to run the postload phase.\n"],["preload","Rails2Preload","Rails2Preload.html#method-c-preload","(initializer)","<p>Called by the Rails patch to run the preload phase.\n"],["preload_until","Rails2Preload","Rails2Preload.html#method-c-preload_until","(method)","<p>Given a method name, the methods of the Rails initialization process are\nsplit into two groups, preload …\n"],["prepare_rails","Rails2Preload","Rails2Preload.html#method-c-prepare_rails","()","<p>Called by the :before_preload Spin hook to prepare Rails.\n"],["setup","Rails2PreloadTest","Rails2PreloadTest.html#method-i-setup","()",""],["teardown","Rails2PreloadTest","Rails2PreloadTest.html#method-i-teardown","()",""],["test_add_spin_hooks","Rails2PreloadTest","Rails2PreloadTest.html#method-i-test_add_spin_hooks","()","<p>Test that the Spin hooks have been added.\n"],["test_after_fork","Rails2PreloadTest","Rails2PreloadTest.html#method-i-test_after_fork","()","<p>Test that Rails is fully loaded by the time the after_fork hook is\nexecuted.\n"],["test_after_preload_classes_are_preloaded","Rails2PreloadTest","Rails2PreloadTest.html#method-i-test_after_preload_classes_are_preloaded","()","<p>Test that the ActiveRecord connection pool <strong>is</strong> disconnected\nif the classes <strong>are</strong> preloaded when the after_preload …\n"],["test_after_preload_classes_not_preloaded","Rails2PreloadTest","Rails2PreloadTest.html#method-i-test_after_preload_classes_not_preloaded","()","<p>Test that the ActiveRecord connection pool is <strong>not</strong>\ndisconnected if the classes are <strong>not</strong> preloaded when …\n"],["test_before_preload","Rails2PreloadTest","Rails2PreloadTest.html#method-i-test_before_preload","()","<p>Test that the Rails 2 initializer is patched when the before_preload hook\nin executed.\n"],["test_initialize_rails","Rails2PreloadTest","Rails2PreloadTest.html#method-i-test_initialize_rails","()","<p>Test that Rails is preloaded when initialized.\n"],["Gemfile","","Gemfile.html","","<p>source :rubygems\n<p>group :rake do\n\n<pre>gem &quot;rake&quot;\ngem &quot;rdoc&quot;</pre>\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/setup” Bundler.require(:rake) Bundler.require(:test)\n<p>require “rdoc/task …\n"]]}}